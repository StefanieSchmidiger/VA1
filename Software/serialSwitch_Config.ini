;===================================================================================================================================
[BaudRateConfiguration]
;
;
; BAUD_RATES_WIRELESS_CONN
; Configuration of baud rates on wireless side from 0 to 3.
; Regarding the supported baud rates see implementation of hwBufIfConfigureBaudRate in hwBufferInterface.cpp
BAUD_RATES_WIRELESS_CONN = 9600, 9600, 9600, 9600
;
;
; BAUD_RATES_DEVICE_CONN
; Configuration of baud rates on wireless side from 0 to 3.
; Regarding the supported baud rates see implementation of hwBufIfConfigureBaudRate in hwBufferInterface.cpp
BAUD_RATES_DEVICE_CONN = 9600, 9600, 9600, 9600
;
;
;===================================================================================================================================
[ConnectionConfiguration]
;
;
; PRIO_WIRELESS_CONN_DEV_X
; Priority of the different wireless connections from the viewpoint of a single device.
; 0: Wireless connection is not used; 1: Highes priority; 2: Second priority, ..
PRIO_WIRELESS_CONN_DEV_0 = 1, 0, 0, 0
PRIO_WIRELESS_CONN_DEV_1 = 0, 1, 0, 0
PRIO_WIRELESS_CONN_DEV_2 = 0, 0, 1, 0
PRIO_WIRELESS_CONN_DEV_3 = 0, 0, 0, 1
;
;
; SEND_CNT_WIRELESS_CONN_DEV_X
; Number of times a package should be tried to be sent over a single wireless connection.
SEND_CNT_WIRELESS_CONN_DEV_0 = 1, 0, 0, 0
SEND_CNT_WIRELESS_CONN_DEV_1 = 0, 1, 0, 0
SEND_CNT_WIRELESS_CONN_DEV_2 = 0, 0, 1, 0
SEND_CNT_WIRELESS_CONN_DEV_3 = 0, 0, 0, 1
;
;
;===================================================================================================================================
[TransmissionConfiguration]
;
;
; RESEND_DELAY_WIRELESS_CONN_DEV_X
; Time in ms that should be waited until a package is sent again when no acknowledge is received per device and wireless connection.
RESEND_DELAY_WIRELESS_CONN_DEV_0 = 30, 30, 30, 30
RESEND_DELAY_WIRELESS_CONN_DEV_1 = 30, 30, 30, 30
RESEND_DELAY_WIRELESS_CONN_DEV_2 = 30, 30, 30, 30
RESEND_DELAY_WIRELESS_CONN_DEV_3 = 30, 30, 30, 30
;
;
; MAX_THROUGHPUT_WIRELESS_CONN
; Maximal throughput per wireless connection (0 to 3) in bytes/s.
MAX_THROUGHPUT_WIRELESS_CONN	 = 10000, 10000, 10000, 10000
;
;
; USUAL_PACKET_SIZE_DEVICE_CONN
; Usual packet size per device in bytes if known or 0 if unknown.
USUAL_PACKET_SIZE_DEVICE_CONN	= 1, 1, 1, 1
;
;
; PACKAGE_GEN_MAX_TIMEOUT
; Maximal time in ms that is waited until packet size is reached. If timeout is reached, the packet will be sent anyway, independent of the amount of the available data.
PACKAGE_GEN_MAX_TIMEOUT	= 50, 50, 50, 50
;
;
; DELAY_DISMISS_OLD_PACK_PER_DEV
DELAY_DISMISS_OLD_PACK_PER_DEV	= 10, 10, 10, 10
;
;
; SEND_ACK_PER_WIRELESS_CONN
; To be able to configure on which wireless connections acknowledges should be sent if a data package has been received. Set to 0 if no acknowledge should be sent, 1 if yes.
SEND_ACK_PER_WIRELESS_CONN	= 0, 0, 0, 0
;
;
; USE_CTS_PER_WIRELESS_CONN
; To be able to configure on which wireless connections CTS for hardware flow control should be used. Set to 0 if it shouldn't be used, 1 if yes.
; If enabled, data transmission is stopped CTS input is high and continued if low.
USE_CTS_PER_WIRELESS_CONN	= 0, 0, 0, 0
;
;
; USE_GOLAY_ERROR_CORRECTING_CODING
; Set to 0 for normal operation, 1 to enable golay coding in order to be able to correct up to 3 bit errors in a 24 bit word. Doubles the data rate.
; TODO: Replace Golay coding by some coding that is able to handle missing bytes (erasure code) or/and add some interleaving
USE_GOLAY_ERROR_CORRECTING_CODING = 0