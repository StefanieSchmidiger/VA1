/*
** ###################################################################
**     THIS MODULE IS GENERATED BY THE TOOL. DO NOT MODIFY IT.
**     Filename  : Vectors.s
**     Project   : ProcessorExpert
**     Processor : MC9S08MM128CLK
**     Compiler  : CodeWarrior HCS08 C Compiler
**     Date/Time : 2016-04-22, 10:52, # CodeGen: 0
**     Abstract  :
**        This file is used by the linker. It describes files to be linked,
**        memory ranges, stack size, etc. For detailed description of the PRM file
**        see CodeWarrior documentation. This file is generated by default.
**        You can switch off generation by setting the property
**        "Generate PRM file = no" on the compiler tab in CPU component and then modify
**        this file if needed.
**
**     Copyright : 1997 - 2014 Freescale Semiconductor, Inc. 
**     All Rights Reserved.
**     
**     Redistribution and use in source and binary forms, with or without modification,
**     are permitted provided that the following conditions are met:
**     
**     o Redistributions of source code must retain the above copyright notice, this list
**       of conditions and the following disclaimer.
**     
**     o Redistributions in binary form must reproduce the above copyright notice, this
**       list of conditions and the following disclaimer in the documentation and/or
**       other materials provided with the distribution.
**     
**     o Neither the name of Freescale Semiconductor, Inc. nor the names of its
**       contributors may be used to endorse or promote products derived from this
**       software without specific prior written permission.
**     
**     THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
**     ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
**     WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
**     DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
**     ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
**     (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
**     LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
**     ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
**     (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
**     SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
**     
**     http: www.freescale.com
**     mail: support@freescale.com
** ###################################################################
*/

NAMES

END

SECTIONS
    Z_RAM                    =  READ_WRITE   0x00B0 TO 0x00CF;
    RAM                      =  READ_WRITE   0x00D0 TO 0x17FF;
    RAM2                     =  READ_WRITE   0x1A20 TO 0x30AF;
    /* unbanked FLASH ROM */
    ROM                      =  READ_ONLY    0xC000 TO 0xFF9D;
    ROM1                     =  READ_ONLY    0x40B2 TO 0x7FFF;
    /* banked FLASH ROM */
    PPAGE_0                  =  READ_ONLY    0x008000 TO 0x008FFF; 
    PPAGE_0_1                =  READ_ONLY    0x009000 TO 0x00BFFF; 
    PPAGE_1                  =  READ_ONLY    0x018000 TO 0x0180B1; 
    PPAGE_2                  =  READ_ONLY    0x028000 TO 0x02BFFF; 
    PPAGE_4                  =  READ_ONLY    0x048000 TO 0x04BFFF; 
    PPAGE_5                  =  READ_ONLY    0x058000 TO 0x05BFFF; 
    PPAGE_6                  =  READ_ONLY    0x068000 TO 0x06BFFF; 
    PPAGE_7                  =  READ_ONLY    0x078000 TO 0x07BFFF; 
END

PLACEMENT
    DEFAULT_RAM,                        /* non-zero page variables */
                                        INTO  RAM,RAM2;

    NON_BANKED, DEFAULT_ROM, ROM_VAR, STRINGS INTO  ROM;

    PAGED_ROM                           /* routines which can be banked */
                                        INTO  PPAGE_0_1,PPAGE_1,PPAGE_2,PPAGE_4,PPAGE_5,PPAGE_6,PPAGE_7,ROM1,PPAGE_0;

    _DATA_ZEROPAGE,                     /* zero page variables */
    MY_ZEROPAGE                         INTO  Z_RAM;
END

INIT _EntryPoint                       /* The entry point of the application. This function is generated into the CPU module. */

STACKSIZE 0x0200                       /* Size of the system stack. Value can be changed on the "Build options" tab */


CHECKSUM
    CHECKSUM_ENTRY
        METHOD_CRC_CCITT
        INIT    0x8D9D
        OF      READ_ONLY   0x009000 TO 0x00BFFF
        OF      READ_ONLY   0x018000 TO 0x0180B1
        OF      READ_ONLY   0x040B2 TO 0x07FFF
        OF      READ_ONLY   0x028000 TO 0x02BFFF
        OF      READ_ONLY   0x0C000 TO 0x0FF73
        OF      READ_ONLY   0x0FF80 TO 0x0FF9F
        OF      READ_ONLY   0x0FFC0 TO 0x0FFFF
        OF      READ_ONLY   0x048000 TO 0x04BFFF
        OF      READ_ONLY   0x058000 TO 0x05BFFF
        OF      READ_ONLY   0x068000 TO 0x06BFFF
        OF      READ_ONLY   0x078000 TO 0x07BFFF
        INTO    READ_ONLY   0xFFB8 SIZE 2
        UNDEFINED 0xff
    END
END

