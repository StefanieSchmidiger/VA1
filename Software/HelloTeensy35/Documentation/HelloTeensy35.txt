=============================================================================
List of generated methods in project: HelloTeensy35

This text description is generated by Processor Expert. Do not modify it.
=============================================================================

Module "TU1"       (component TimerUnit_LDD)
   - TU1_Init -Initializes the device. Allocates memory for the device data structure, allocates interrupt vectors and sets 
                interrupt priority, sets pin routing, sets timing, etc. If the property <"Enable in init. code"> is set to 
                "yes" value then the device is also enabled (see the description of the <Enable> method). In this case the 
                <Enable> method is not necessary and needn't to be generated. This method can be called only once. Before the 
                second call of Init the <Deinit> must be called first.

Module "Led"       (component BitIO)
   - Led_PutVal -The specified output value is set. If the direction is [input], the component saves the value to a memory or a 
                register and this value will be written to the pin after switching to the output mode (using [SetDir(TRUE)]; 
                see <Safe mode> property for limitations). If the direction is [output], it writes the value to the pin. 
                (Method is available only if the direction = _[output]_ or _[input/output]_).
   - Led_NegVal -Negates (inverts) the output value. It is equivalent to the [PutVal(!GetVal())]. This method is available only 
                if the direction = _[output]_ or _[input/output]_.

Module "SDHC1"     (component SDHC_LDD)
   - SDHC1_Init -Initializes the device. Allocates memory for the device data structure, allocates interrupt vectors and sets 
                interrupt priority, sets pin routing, sets timing, etc. If the property <"Enable device"> is set to "yes" then 
                the device is also enabled (see the description of the <Enable> method). In this case the <Enable> method is 
                not necessary and need not to be generated. This method can be called only once. Before the second call of Init 
                the <Deinit> method must be called first.
   - SDHC1_DetectCards -Detects newly inserted and removed cards. The OnCardInserted event will be called for every new card 
                and the OnCardRemoved event will be called for every removed card. This method should be used when card 
                detection pin is not available.
   - SDHC1_SelectCard -Selects a card by its identification number. All further operations will apply to this card. Special 
                card identification number <compId>_NO_CARD will deselect the active card.
   - SDHC1_GetCardInfo -Returns card information about the selected card. Method call starts the card information retrieval 
                process. After the card information has been received, the OnFinished event is called (the component state 
                changes to idle) and the information is stored in the specified variable.
   - SDHC1_TransferBlocks -Initiates a data block transfer on the selected card. Transfer can be a read or write operation 
                depending on the transfer operation parameter. Read operation reads data blocks from the specified address on a 
                memory card and stores their content into buffers specified by the buffer descriptor list. Write operation 
                writes data blocks specified by the buffer descriptor list to a card memory on the specified address. Data 
                blocks should be the same size and the block size should be supported by the memory card. Buffer addresses 
                should be aligned to a hardware specific address boundary.
   - SDHC1_GetStatus -Returns the current component status, specifying the ongoing operation.
   - SDHC1_GetError -Returns the last error code and the memory address where the error occurred (if applicable).

Module "Cpu"       (component MK64FN1M0LQ12)

===================================================================================
